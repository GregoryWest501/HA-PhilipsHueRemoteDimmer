blueprint:
  source_url: https://github.com/GregoryWest501/HA-PhilipsHueRemoteDimmer/blob/main/HueRWL0022DimmerController.yaml
  name: Philips Hue Remote RWL0022
  description: This blueprint configures a Philips Remote with a Colour light.
  domain: automation
  input:
    remote:
      name: Hue Remote Control
      description: Select the remote control you wish to use.
      selector:
        device:
#          integration: zha
#          manufacturer: IKEA of Sweden
#          model: TRADFRI remote control
    light:
      name: Light
      description: Select the light entity you wish to control.
      selector:
        device:
#          domain: light
    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 100.0
          max: 1000.0
          step: 100.0
          unit_of_measurement: milliseconds
          mode: slider
      default: 500
    preset:
      name: Helper
      description: Select the helper entity with you pre defined settings.
      selector:
        entity:
          domain: input_select
mode: restart
max_exceeded: silent
variables:
  var_preset: !input 'preset'
  var_speed: !input 'speed'
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input 'remote'
action:
- choose:
  - conditions:
    - condition: state
      entity_id: !input 'preset'
      state: unknown
    sequence:
    - service: input_select.select_last
      target:
        entity_id: !input 'preset'
- choose:
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "toggle" }}'
    sequence:
    - service: light.toggle
      target:
        entity_id: !input 'light'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "move_to_level_with_on_off"
        }}'
    sequence:
    - service: light.turn_on
      target:
        entity_id: !input 'light'
      data:
        brightness: 254
        hs_color:
        - 38.222
        - 52.941
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "step_with_on_off" }}'
    sequence:
    - service: light.turn_on
      target:
        entity_id: !input 'light'
      data:
        brightness_step_pct: 20
        transition: '{{ (var_speed / 1000)|float }}'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "move_with_on_off" }}'
    sequence:
    - repeat:
        while: []
        sequence:
        - service: light.turn_on
          target:
            entity_id: !input 'light'
          data:
            brightness_step_pct: 10
            transition: '{{ (var_speed / 1000)|float }}'
        - delay:
            milliseconds: !input 'speed'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "step" }}'
    sequence:
    - service: light.turn_on
      target:
        entity_id: !input 'light'
      data:
        brightness_step_pct: -20
        transition: '{{ (var_speed / 1000)|float }}'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "move" }}'
    sequence:
    - repeat:
        while: []
        sequence:
        - service: light.turn_on
          target:
            entity_id: !input 'light'
          data:
            brightness_step_pct: -10
            transition: '{{ (var_speed / 1000)|float }}'
        - delay:
            milliseconds: !input 'speed'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "press" }}'
    - condition: template
      value_template: '{{ trigger.event.data.args == [256,13,0] }}'
    sequence:
    - service: input_select.select_next
      target:
        entity_id: !input 'preset'
      data:
        cycle: true
    - service: light.turn_on
      target:
        entity_id: !input 'light'
      data: '{{ states(var_preset) }}'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "hold" }}'
    - condition: template
      value_template: '{{ trigger.event.data.args == [3328,0] }}'
    sequence:
    - repeat:
        while: []
        sequence:
        - service: input_select.select_next
          target:
            entity_id: !input 'preset'
          data:
            cycle: true
        - service: light.turn_on
          target:
            entity_id: !input 'light'
          data: '{{ states(var_preset) }}'
        - delay:
            milliseconds: !input 'speed'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "press" }}'
    - condition: template
      value_template: '{{ trigger.event.data.args == [257,13,0] }}'
    sequence:
    - service: input_select.select_previous
      target:
        entity_id: !input 'preset'
      data:
        cycle: true
    - service: light.turn_on
      target:
        entity_id: !input 'light'
      data: '{{ states(var_preset) }}'
  - conditions:
    - condition: template
      value_template: '{{ trigger.event.data.command == "hold" }}'
    - condition: template
      value_template: '{{ trigger.event.data.args == [3329,0] }}'
    sequence:
    - repeat:
        while: []
        sequence:
        - service: input_select.select_previous
          target:
            entity_id: !input 'preset'
          data:
            cycle: true
        - service: light.turn_on
          target:
            entity_id: !input 'light'
          data: '{{ states(var_preset) }}'
        - delay:
            milliseconds: !input 'speed'
  default: []
